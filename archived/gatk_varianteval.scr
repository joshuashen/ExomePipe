#!/bin/sh
#$ -cwd
# -l mem=5G,time=1::

# This step in the pipeline performs variant evaluation on the VCFs.
# This step has to be invoked before and after the variant filtration step.

GLOBAL="global_config.sh"

if [[ -e $GLOBAL ]]
then
        . $GLOBAL
else
        echo "Global config file not found. Exiting."
        exit 1
fi

USAGE="Usage: $0 -I <Input bam file> -R <Reference fasta> -D <DBSNP file> [-L \"#:#-#\"]"

while getopts I:R:D:h o
do      case "$o" in
        I)      INP="$OPTARG";;
        R)      REF="$OPTARG";;
        D)      DBSNP="$OPTARG";;
        h)      echo $USAGE
                exit 1;;
        esac
done

if [[ $INP == "" || $REF == "" || $DBSNP == "" ]]
then
        echo $USAGE
        exit 1
fi

python /ifs/home/c2b2/ip_lab/yshen/usr/Sting/python/makeIndelMask.py $INP.indels.raw.bed 10 $INP.indels.mask.bed

if [[ $? != 0 ]]
then
	echo "Variant Eval: MakeIndelMask FAILED"
	exit 1
fi

$GATK \
    -T VariantEval -R $REF \
    -B:eval,VCF $INP.snps.raw.vcf \
    -D $DBSNP \
    -E CountVariants \
    -noStandard \
    -BTI eval

