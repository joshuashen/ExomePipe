#!/bin/bash
#$ -cwd
# Findmem

# Realign reads locally around indels
# Run with all samples from a single chromosome together in $INP.list

HEAP=4000
### TEMP="/ifs/scratch/c2b2/af_lab/saec/temp/"
INP=""
CHR=""
MEM=""

USAGE="Usage: $0 -I <Input bam file> -L <Chromosome> -g <global config> [-m heap_memory]"
ERRORMESSAGE="#### ERROR"
ERRORMESSAGE1="The following error has occurred"

while getopts I:L:m:g:h o
do      case "$o" in
        I)      INP="$OPTARG";;
        L)      CHR="$OPTARG";;
        m)      MEM="$OPTARG";;
        g)      GLOBAL="$OPTARG";;  # global config
        h)      echo $USAGE
                exit 1;;
        esac
done


if [[ $INP == ""  || $GLOBAL == "" ]]
then
        echo $USAGE
        exit 1
fi

. $GLOBAL

if [ ! $MEM == "" ]
    then
    HEAP=$MEM
fi

OUTDIR=$INP"_pipe"
if [ ! -d $OUTDIR ]; then
    mkdir $OUTDIR
fi

if [ $JOB_ID == "" ]; then
    JOB_ID=$CHR
fi
 
# JOB_ID is the qsub job ID
TEMP=$OUTDIR"/temp/"$JOB_ID"/"

if [ ! -d $TEMP ]; then
    mkdir -p $TEMP
fi

JAVA="java -Xmx${HEAP}m -Djava.io.tmpdir="${TEMP}
GATK="$JAVA -jar "${GATKJAR}
FIXMATE="$JAVA -jar ${PICARD}/FixMateInformation.jar" 

if [[ $CHR == "" ]]
    then
    echo "no chr prodived"
    exit 1
fi
if [[ $CHR == "23" ]]
    then
    CHR="X"
fi
if [[ $CHR == "24"  ]]
    then
    CHR="Y"
fi
if [[ $REFTYPE == "hg" ]]  # hg18/19 -> chr1, chr2 etc;  build36/37 -> 1, 2 etc                                                                                                                       
    then
    CHR="chr${CHR}"
fi

echo $CHR 

$GATK \
    -L $CHR \
    -T RealignerTargetCreator \
    -I $INP \
    -R $REF \
    -D $DBSNP \
    -o $OUTDIR/$CHR.forRealigner.intervals

$GATK \
    -L $CHR \
    -I $INP \
    -R $REF \
    -D $DBSNP \
    -T IndelRealigner \
    -compress 0 \
    -targetIntervals $OUTDIR/$CHR.forRealigner.intervals \
    -o $OUTDIR/$CHR.cleaned.bam 

# Need to implement for known-only/lane level cleaning?
if [[ $? == 0 ]]
    then
    echo "local realign complete"
else
    echo "local realign failed"
    exit 1
fi

$FIXMATE INPUT=$OUTDIR/$CHR.cleaned.bam OUTPUT=$OUTDIR/$CHR.fixed.bam SO=coordinate VALIDATION_STRINGENCY=SILENT 


if [[ $? == 0 ]]
    then
    rm -f $OUTDIR/$CHR.cleaned.bam
    echo "fixmate complete"
else
    echo "fixmate failed"
    exit 1
fi
# rm -rf $OUTDIR/$CHR.realign.*
rm -fr $TEMP
