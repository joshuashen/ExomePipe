#!/bin/sh
#$ -cwd
# Findmem

# Recalibrate base quality score
# INPUT:	Run with a single read-group/lane in $INP.list
# OUTPUT:	$INP.$CHR.recalibrated.bam recalibrated bam file

HEAP=4000

# CHRFILE="${BPATH}/chrdb"

INP=""
CHR=""
REF=""
OUTPUT=""
TEMP=""

USAGE="Usage: $0 -I <Input bam file> -g <global config> \"#:#-#\"]"
ERRORMESSAGE="#### ERROR"
ERRORMESSAGE1="The following error has occurred"

while getopts I:L:m:g:t:o:h opt
  do     
  case "$opt" in
      I)      INP="$OPTARG";;
      L)      CHR="$OPTARG";;
      g)      GLOBAL="$OPTARG";;
      t)      TEMP="$OPTARG";;
      m)      MEM="$OPTARG";;
      o)      OUTPUT="$OPTARG";;
      h)      echo $USAGE
	  exit 1;;
  esac
done

if [[ $INP == "" || $GLOBAL == "" ]]
then
        echo $USAGE
        exit 1
fi

. $GLOBAL

if [ ! $MEM == "" ]
    then
    HEAP=$MEM
fi

# JOB_ID is the qsub job ID
if [ ! -d $TEMP ]; then
    mkdir -p $TEMP
fi

JAVA="java -Xmx${HEAP}m -Djava.io.tmpdir="${TEMP}
GATK="$JAVA -jar "${GATKJAR}

if [[ $REFTYPE == "hg" ]]  # hg18/19 -> chr1, chr2 etc;  build36/37 -> 1, 2 etc                                            
    then
    cat $ExonFile | awk '{ print $1":"$2"-"$3}' > $TEMP"/target.list"
else
    cat $ExonFile | awk '{split($1,a,"chr"); print a[2] ":" $2 "-" $3}' > $TEMP"/target.list"
fi

Targets=$TEMP"/target.list"

$GATK \
    -R $REF \
    --DBSNP $DBSNP \
    -I $INP \
    -L $Targets \
    -nt 2 \
    -T CountCovariates \
    -cov ReadGroupCovariate \
    -cov QualityScoreCovariate \
    -cov CycleCovariate \
    -cov DinucCovariate \
    -recalFile $INP.recal_data.csv

# [-B:mask,VCF sitesToMask.vcf] \

if [[ $OUTPUT == ""  ]]
    then
    OUTPUT=$INP.recalibrated.bam
fi

$GATK \
    -R $REF \
    -T TableRecalibration \
    -I $INP \
    -recalFile $INP.recal_data.csv \
    --out $OUTPUT


$SAMTOOLS index $OUTPUT

echo "recalibration complete"

