#!/bin/sh
#$ -cwd
# Findmem

# Realign reads locally around indels
# Run with all samples from a single chromosome together in $INP.list

HEAP=4000
JAVA="java -Xmx${HEAP}m -Djava.io.tmpdir=/ifs/scratch/c2b2/ip_lab/ag2671/tmp"
GATK="$JAVA -jar /ifs/data/c2b2/ip_lab/shares/SOFTWARE/Sting/dist/GenomeAnalysisTK.jar"
FIXMATE="$JAVA -jar /ifs/data/c2b2/ip_lab/shares/SOFTWARE/picard-tools-1.29/FixMateInformation.jar"
SAMTOOLS="/ifs/home/c2b2/ip_lab/yshen/usr/bin/samtools"
CHRFILE="./chrdb"

INP=""
CHR=""
REF=""
DBSNP=""

USAGE="Usage: $0 -I <Input bam file> -R <Reference fasta> -D <DBSNP file> [-L \"#:#-#\"]"
ERRORMESSAGE="#### ERROR"
ERRORMESSAGE1="The following error has occurred"

while getopts I:L:R:D:h o
do      case "$o" in
        I)      INP="$OPTARG";;
        L)      CHR="$OPTARG";;
        R)      REF="$OPTARG";;
        D)      DBSNP="$OPTARG";;
        h)      echo $USAGE
                exit 1;;
        esac
done

if [[ $INP == ""  || $REF == "" || $DBSNP == "" ]]
then
        echo $USAGE
        exit 1
fi

if [[ $CHR == "" ]]
then
	CHR="${SGE_TASK_ID}"
fi

if [[ `grep -x \`basename "$REF"\` "$CHRFILE"` == "" ]]
then
        CHR="chr${CHR}"
fi

$GATK \
 -L $CHR \
 -T RealignerTargetCreator \
 -I $INP \
 -R $REF \
 -D $DBSNP \
 -o $INP.$CHR.forRealigner.intervals 2>&1 > realignment.$CHR.output

if [[ $? != 0 || `grep "$ERRORMESSAGE" realignment.*.output pipeline.output` != "" ]]
then
	echo "RealignerTargetCreator FAILED"
	exit 1
fi

$GATK \
 -L $CHR \
 -I $INP \
 -R $REF \
 -D $DBSNP \
 -T IndelRealigner \
 -compress 0 \
 -targetIntervals $INP.$CHR.forRealigner.intervals \
 -o $INP.$CHR.cleaned.bam 2>&1 >> realignment.$CHR.output

# Need to implement for known-only/lane level cleaning?

rm -f $INP.$CHR.forRealigner.intervals

if [[ $? != 0 || `grep "$ERRORMESSAGE" realignment.*.output pipeline.output` != "" ]]
then
	echo "IndelRealigner FAILED"
	exit 1
fi

$FIXMATE INPUT=$INP.$CHR.cleaned.bam OUTPUT=$INP.$CHR.fixed.bam SO=coordinate VALIDATION_STRINGENCY=SILENT 2>&1 >> realignment.$CHR.output

rm -f $INP.$CHR.cleaned.bam

if [[ $? != 0 ]]
then
	echo "Realigning: Call to FixMate FAILED"
	exit 1
fi

$SAMTOOLS index $INP.$CHR.fixed.bam 2>&1 >> realignment.$CHR.output

if [[ $? != 0 ]]
then
	echo "Realigning: Samtools indexing FAILED"
	exit 1
fi

echo "$0: samtools index complete"

